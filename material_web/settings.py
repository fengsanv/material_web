# -*- coding: utf-8 -*-
"""
Django settings for material_web project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
from django.conf.global_settings import MIDDLEWARE_CLASSES
import environ
root = environ.Path(__file__)
env = environ.Env(DEBUG=(bool, False),)
env.read_env()
SITE_ROOT = root()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

#==========================Setting List===================================

# 当 DEBUG = False 时， 出现异常通知的用户, 邮件列表
#------------------------------------------------------------
ADMINS = [('liang', 'theol.liang@gmail.com')]


# 只有当 CommonMiddleware 安装之后，才被使用。 默认为 True
#------------------------------------------------------------
APPEND_SLASH = True


# 用来配置 Django 项目所使用的所有缓存系统
#------------------------------------------------------------
# CACHES = {
#        'default':
#        {
#            'BACKEND': 'path.to.BACKEND.object', # 缓存后端对象
#            'KEY_FUNCTION':'path.to.function', # 一个使用 prefix,version以及key 来创建最后的缓存键的方法
#            'KEY_PREFIX':'',
#            'LOCATION': 'path.to.cache.location', # 缓存存放的位置
#            'OPTIONS': 'extra.parameters.to.backend', # 传递给缓存后端对象的额外选项参数
#            'TIMEOUT':'NUMBER of seconds before a cache isconsidered stale', # 缓存失效时间
#            'VERSION':1 #版本
#        }
#
#    }

# CACHE_MIDDLEWARE_ALIAS=default
# CACHE_MIDDLEWARE_KEY_PREFIX=''
# CACHE_MIDDLEWARE_SECONDS=600

# CSRF 安全访问控制相关设置
#------------------------------------------------------------
# CSRF_COOKIE_AGE=31449600
# CSRF_COOKIE_DOMAIN=None
# CSRF_COOKIE_HTTPONLY=False # 如果为 True, 则客户端的 JavaScript 代码不能访问 CSRF cookie
# CSRF_COOKIE_NAME='csrftoken'
# CSRF_COOKIE_PATH='/'
# CSRF_COOKIE_SECURE=False
# CSRF_FAILURE_VIEW='django.views.csrf.csrf_failure'
# CSRF_HEADER_NAME='HTTP_X_CSRFTOKEN'
# CSRF_TRUSTED_ORIGINS=[]


# 项目的日志系统相关配置
#------------------------------------------------------------
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    'formatters':
    {

        'verbose':
        {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)s %(message)s'
        },

        'simple':
        {
            'format': '[%(levelname)s - %(module)s - %(asctime)s]: ====%(message)s===='
        },
    },

    'filters':
    {

        'required_debug_true':
        {
            '()': 'django.utils.log.RequireDebugTrue',
        },

    },

    'handlers':
    {

        'file':
        {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'verbose',
        },

        'console':
        {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },

    },

    'loggers':
    {
        'material.views':
        {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# 安全警告: 确保在生产环境中使用密钥
SECRET_KEY = 'e^19jj8r9ut^z)%*mpffve&7boo5d#xx%y4!9s&1!z4n0vdo6o'

# 安全警告: 不要在生产环境中设置为 True
DEBUG = True

# 会抑制 django 视图中的正常异常
DEBUG_PROPAGATE_EXCEPTIONS = False

# django 服务的 主机/域名 列表
ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# 项目中安装的应用定义
INSTALLED_APPS = [
    'django.contrib.admin',

    # 核心权限验证框架
    'django.contrib.auth',

    # django的内容类型系统， 将权限与model关联
    'django.contrib.contenttypes',
    'django.contrib.sessions',

    # 应用消息框架应用
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # RESTful api app
    'tastypie',

    'material',
    'tastypie_test',
]

# 项目的中间件定义
MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',

    # 管理跨请求会话
    # 消息应用框架依赖中间件
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',

    # 通过会话关联用户与请求
    'django.contrib.auth.middleware.AuthenticationMiddleware',

    # 消息应用框架中间件
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 主 URL 映射配置模块名称
ROOT_URLCONF = 'material_web.urls'

# 项目模板引擎配置
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'NAME':'django',  # 当前定义的模板引擎的别名, 默认为 BACKEND 类所在的模块名， 此处为 'djdango'
        'APP_DIRS': True,

        # 为模板引擎类提供的额外选项参数值， 依赖于特定的 BACKEND
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',

                # 模板中的消息上下文处理器
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI 应用对象配置
WSGI_APPLICATION = 'material_web.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
# 数据库后端配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        #        'USER': 'username',
        #        'PASSWORD':'password',
        #        'HOST':'database_host',
        #        'PORT':'access_port_number',
        #        'ATOMIC_REQUESTS':False,
        #        'AUTOCOMMIT':True,
        #        'CONN_MAX_AGE':0,
        #        'OPTIONS':{},
        #        'TIME_ZONE':None,

        # 测试数据库相关的设置
        #        'TEST':{
        #            'USER':None,
        #            'PASSWORD':None,
        #            'CHARSET':None, # 由 postgresql/mysql 支持
        #            'COLLATION':None, # 只由 mysql 使用
        #            'DEPENDENCIES':['default'],
        #            'MIRROR':None,
        #            'NAME':None,
        #            'SERIALIZE':False,
        #            'CREATE_DB':True,# 限于 Oracle 数据库
        #            'CREATE_USER':True,# 限于 Oracle 数据库
        #            'TBLSPACE':None,# 限于 Oracle 数据库
        #            'TBLSPACE_TMP':None,# 限于 Oracle 数据库
        #            'DATAFILE':None,# 限于 Oracle 数据库
        #            'DATAFILE_TMP':None,# 限于 Oracle 数据库
        #            'DATAFILE_MAXSIZE':'500M', # 限于 Oracle 数据库
        #            'DATAFILE_TMP_MAXSIZE':'500M', # 限于 Oracle 数据库
        #            }
    }
}


# 系统中任何地方的日期/时间显示格式定义
DATE_FORMAT = 'Y/m/d'
DATE_INPUT_FORMATS = \
    [
        # '2006-10-25', '10/25/2006', '10/25/06'
        '%Y-%m-%d', '%m/%d/%Y', '%m/%d/%y',
        '%b %d %Y', '%b %d, %Y',            # 'Oct 25 2006', 'Oct 25, 2006'
        '%d %b %Y', '%d %b, %Y',            # '25 Oct 2006', '25 Oct, 2006'
        # 'October 25 2006', 'October 25, 2006'
        '%B %d %Y', '%B %d, %Y',
        # '25 October 2006', '25 October, 2006'
        '%d %B %Y', '%d %B, %Y',
    ]

DATETIME_FORMAT = 'Y/m/d H:M:S'
DATETIME_INPUT_FORMATS = \
    [
        '%Y-%m-%d %H:%M:%S',     # '2006-10-25 14:30:59'
        '%Y-%m-%d %H:%M:%S.%f',  # '2006-10-25 14:30:59.000200'
        '%Y-%m-%d %H:%M',        # '2006-10-25 14:30'
        '%Y-%m-%d',              # '2006-10-25'
        '%m/%d/%Y %H:%M:%S',     # '10/25/2006 14:30:59'
        '%m/%d/%Y %H:%M:%S.%f',  # '10/25/2006 14:30:59.000200'
        '%m/%d/%Y %H:%M',        # '10/25/2006 14:30'
        '%m/%d/%Y',              # '10/25/2006'
        '%m/%d/%y %H:%M:%S',     # '10/25/06 14:30:59'
        '%m/%d/%y %H:%M:%S.%f',  # '10/25/06 14:30:59.000200'
        '%m/%d/%y %H:%M',        # '10/25/06 14:30'
        '%m/%d/%y',              # '10/25/06'
    ]
TIME_FORAMT = 'H:M:S'
TIME_INPUT_FORMATS = \
    [
        '%H:%M:%S',     # '14:30:59'
        '%H:%M:%S.%f',  # '14:30:59.000200'
        '%H:%M',        # '14:30'
    ]
# 模板中日期/时间显示的格式
SHORT_DATE_FORMAT = 'Y/m/d'
SHORT_DATETIME_FORMAT = 'Y/m/d H:M:S'
# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

# 密码验证器配置
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

# 参考 https://en.wikipedia.org/wiki/List_of_tz_database_time_zones 可以使用的时间区域值列表
TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

LOGIN_URL = '/login/'



############################################################
# tastypie RESTful api settings
############################################################


API_LIMIT_PER_PAGE = 25 # 设置 api 每页访问资源的数

TASTYPIE_FULL_DEBUG = True

TASTYPIE_CANNED_ERROR = "Opps, we broke it!"

TASTYPIE_ALLOW_MISSING_SLASH = True

TASTYPIE_DATETIME_FORMATTING = 'iso-8601' # 设置全球日期时间格式，可用值:[iso-8601, iso-8601-strict, rfc-2822]

TASTYPIE_DEFAULT_FORMATS =['json','xml','yaml', 'plist'] # 设置网站的序列化格式列表
# 该设置使得 ApiKey 模型成为一个抽象基类， 在多数据库设置(大哥数据库每个都具有他们自己的用户数据表而且ApiKeyAuthentication没有使用)中很有用。
TASTYPIE_ABSTRACT_APIKEY = False 
